from aiogram import Router, types, F
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.types import LabeledPrice, PreCheckoutQuery
from aiogram.filters import Command

router = Router()

# üîπ –¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–∫–µ–Ω, –≤—ã–¥–∞–Ω–Ω—ã–π @BotFather –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –ÆKassa
PROVIDER_TOKEN = "381764678:TEST:148623"  # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–∫–µ–Ω, –≤—ã–¥–∞–Ω–Ω—ã–π –±–æ—Ç—Ñ–∞–∑–µ—Ä–æ–º, –Ω–µ –∫–ª—é—á –∏–∑ –∫–∞–±–∏–Ω–µ—Ç–∞ –Æ–∫–∞—Å—Å—ã

# üîπ –î–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–µ
TITLE = "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è"
DESCRIPTION = "–ö—Ä–∏–∑–∏—Å–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è (2 —á–∞—Å–∞)."
CURRENCY = "RUB"
PRICE = 12000  # –≤ —Ä—É–±–ª—è—Ö
PAYLOAD = "consultation_payment"

# üîπ –û—Å–Ω–æ–≤–Ω–æ–π —ç–∫—Ä–∞–Ω —Ä–∞–∑–¥–µ–ª–∞ 12
@router.callback_query(F.data == "chapter_12")
async def chapter_12_handler(callback: types.CallbackQuery):
    text = (
        "<b>–í—ã–±–µ—Ä–∏ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã.</b>\n"
        "–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã —è —Å—Ä–∞–∑—É —Å–≤—è–∂—É—Å—å —Å —Ç–æ–±–æ–π –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏ –≤—Å—Ç—Ä–µ—á–∏.\n\n"
        "–ß–µ–∫ –ø—Ä–∏–¥—ë—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, –ª–∏–±–æ —è –ø—Ä–∏—à–ª—é –µ–≥–æ —Ç–µ–±–µ –ª–∏—á–Ω–æ."
    )

    builder = InlineKeyboardBuilder()
    builder.button(text="–Æ–ö–∞—Å—Å–∞", callback_data="yookassa_pay")
    builder.button(text="üí≥ –ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É / –°–ë–ü", callback_data="chapter_18")
    builder.adjust(1)

    await callback.message.answer(text, reply_markup=builder.as_markup())
    await callback.answer()


# üîπ –ö–Ω–æ–ø–∫–∞ –Æ–∫–∞—Å—Å—ã ‚Äî –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å—á—ë—Ç–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É
@router.callback_query(F.data == "yookassa_pay")
async def yookassa_pay(callback: types.CallbackQuery):
    prices = [LabeledPrice(label=TITLE, amount=PRICE * 100)]  # —Å—É–º–º–∞ –≤ –∫–æ–ø–µ–π–∫–∞—Ö

    await callback.message.answer_invoice(
        title=TITLE,
        description=DESCRIPTION,
        provider_token=PROVIDER_TOKEN,
        currency=CURRENCY,
        prices=prices,
        payload=PAYLOAD,
        start_parameter="consultation",
    )
    await callback.answer()


# üîπ –û–±—Ä–∞–±–æ—Ç–∫–∞ pre_checkout_query (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π —à–∞–≥)
@router.pre_checkout_query()
async def process_pre_checkout_query(pre_checkout_query: PreCheckoutQuery, bot):
    await bot.answer_pre_checkout_query(pre_checkout_query.id, ok=True)


# üîπ –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã
@router.message(F.successful_payment)
async def successful_payment_handler(message: types.Message):
    payment_info = message.successful_payment.to_python()
    print("‚úÖ –£—Å–ø–µ—à–Ω–∞—è –æ–ø–ª–∞—Ç–∞:", payment_info)

    await message.answer(
        "<b>‚úÖ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!</b>\n\n"
        "–°–ø–∞—Å–∏–±–æ! –Ø —Å–≤—è–∂—É—Å—å —Å —Ç–æ–±–æ–π –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –≤—Å—Ç—Ä–µ—á–∏ üôå"
    )

    # üîπ –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–∞–∑–¥–µ–ª 16
    from chapters.chapter_16 import send_chapter_16
    await send_chapter_16(message)
