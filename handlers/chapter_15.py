from aiogram import Router, types, F
from aiogram.utils.keyboard import InlineKeyboardBuilder
import os
import requests
import uuid  # –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ Idempotence-Key

router = Router()

# üîπ –î–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–µ
TITLE = "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞"
DESCRIPTION = "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ç–µ–∫—É—â–µ–π –∫–ª—é—á–µ–≤–æ–π –ø—Ä–æ–±–ª–µ–º—ã (1 —á–∞—Å)."
PRICE = 5000  # –≤ —Ä—É–±–ª—è—Ö

# üîπ –û—Å–Ω–æ–≤–Ω–æ–π —ç–∫—Ä–∞–Ω —Ä–∞–∑–¥–µ–ª–∞ 15
@router.callback_query(F.data == "chapter_15")
async def chapter_15_handler(callback: types.CallbackQuery):
    SHOP_ID = os.getenv("YOOKASSA_SHOP_ID")
    SECRET_KEY = os.getenv("YOOKASSA_SECRET_KEY")

    # –°–æ–∑–¥–∞—ë–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π Idempotence-Key
    idempotence_key = str(uuid.uuid4())

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–ª–∞—Ç–µ–∂–∞ —á–µ—Ä–µ–∑ API –Æ–∫–∞—Å—Å—ã
    payment_data = {
        "amount": {"value": f"{PRICE:.2f}", "currency": "RUB"},
        "capture": True,
        "confirmation": {
            "type": "redirect",
            # –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–µ—Ä–Ω—ë—Ç—Å—è –≤ –±–æ—Ç
            "return_url": f"https://t.me/{callback.from_user.username or 'your_bot_name'}"
        },
        "description": DESCRIPTION,
        "metadata": {"user_id": callback.from_user.id}
    }

    response = requests.post(
        "https://api.yookassa.ru/v3/payments",
        auth=(SHOP_ID, SECRET_KEY),
        json=payment_data,
        headers={"Idempotence-Key": idempotence_key}  # –¥–æ–±–∞–≤–∏–ª–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á
    )

    if response.status_code == 200:
        data = response.json()
        pay_url = data["confirmation"]["confirmation_url"]

        text = (
            "<b>–í—ã–±–µ—Ä–∏ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã.</b>\n"
            "–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã —è —Å—Ä–∞–∑—É —Å–≤—è–∂—É—Å—å —Å —Ç–æ–±–æ–π –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏ –≤—Å—Ç—Ä–µ—á–∏.\n\n"
            "–ß–µ–∫ –ø—Ä–∏–¥—ë—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, –ª–∏–±–æ —è –ø—Ä–∏—à–ª—é –µ–≥–æ —Ç–µ–±–µ –ª–∏—á–Ω–æ."
        )

        builder = InlineKeyboardBuilder()
        builder.button(text="–Æ–ö–∞—Å—Å–∞", url=pay_url)  # –∫–Ω–æ–ø–∫–∞ —Å—Ä–∞–∑—É –≤–µ–¥—ë—Ç –Ω–∞ –Æ–∫–∞—Å—Å—É
        builder.button(text="üí≥ –ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É / –°–ë–ü", callback_data="chapter_19")
        builder.button(text="–Ø –æ–ø–ª–∞—Ç–∏–ª–∞ / –ù–∞–ø–∏—Å–∞—Ç—å –º–Ω–µ", callback_data="chapter_16")  # –Ω–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞
        builder.adjust(1)
      
        await callback.message.answer(text, reply_markup=builder.as_markup())
    else:
        await callback.message.answer(
            f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞:\n\n<code>{response.text}</code>",
            parse_mode="HTML"
        )

    await callback.answer()
